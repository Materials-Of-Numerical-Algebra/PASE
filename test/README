parPASE_ver01
是一个最初始的版本, 这个版本实现了从最粗+aux一层层到最细的过程
并且加入pase矩阵的V循环, 即每一个细层都加入aux进行迭代, 当时由于pase矩阵向量操作没有进行MPI优化
使得并行效率不高, 但是优化后(主要优化内积操作), 效率有提升.
值得注意的是, 这样每层都生成aux的算法, 对内存需要更多.
算法中并不清楚后光滑是怎么一回事, 所以只有前光滑, 即从最细层到最粗层的光滑, 光滑后理解为更新了aux空间
到最粗层之后, 求解特征值问题, 再直接投影到最细层进行CG迭代.
但是parPASE_ver01之前的版本也好似实现了后光滑, 但是不清楚机理, 可以在github中找到对应的版本.

parPASE_ver02
最成熟的一个版本, 首先它重写了从最粗+aux一层层到最细的过程, 使得程序更简明.
同时, 在循环过程中, 只进行最粗+aux特征问题和最细线性问题的迭代求解.
算法非常稳定, 并且并行效率很高.
这个版本需要测试其它矩阵是否收敛, 以至于可以与lobpcg做一般性的比较.
hypre中有生成各类矩阵的子函数, 但是并没有完全看明白. 
当然, 也可以尝试进行FEI的接口(或者其它PDE离散接口), 直接生成并行矩阵, 进而利用PASE进行特征值的求解.

parPASE_ver06
是稳定的版本, 它是parPASE_ver02的推广版本, 是将多个矩阵进行分块算, 使得aux部分变小.
但是当特征值个数很多的时候, 并不能算得很好. 而且应该按照特征值的分布进行分块, 一致分块显然是不行的.

parPASE_ver07
希望的版本, 基于parPASE_ver06, 希望不同特征值在不同层上校正.
即, 小特征值在最粗层上校正, 较大特征值在细层校正.
也就是说, 先要实现PASE矩阵的V循环(可以参考parPASE_ver01), 
只是现在并不是每一层都校正所有特征值, 而是根据收敛情况, 不同层校正不同特征值.
所以可以先写一个基于parPASE_ver02的pase矩阵V循环的程序, 进而改成不同特征值不同层校正的程序.

parPASE_ver04
是对PASE软件包脱离hypre的一个尝试, 洪一直在进行中, 所以并不需要进行更新.
pase_es, pase_mg中都有相应的结构体现.
以后参考洪的程序进行再修改.

parPASE_ver10
对A_Hh矩阵进行对角化然后再用lobpcg进行求解.
这样的话, 就可以设置precondition了, 也是分块的
比如A_H部分利用AMG, aux_hh部分进行LU分解
